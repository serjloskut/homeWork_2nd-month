using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace HomeWork1
{
    class Program
    {
        static void Main(string[] args)
        {
            Aquarium aquarium = new Aquarium();
            aquarium.Life();
        }
    }

    class Aquarium
    {
        private List<Fish> _fishes;
        private int _fishMax;
        private Random _random = new Random();

        public bool IsFull { get; private set; }

        public Aquarium()
        {
            _fishes = new List<Fish>();
            _fishMax = _random.Next(3, 10);
            IsFull = false;
        }

        public void Life()
        {
            bool isContinue = true;

            while (isContinue)
            {
                Console.SetCursorPosition(0, 10);
                ShowInfo();

                if (_fishes.Count == 0)
                    Console.WriteLine("Аквариум пустой.");
                else
                    Console.WriteLine($"Заполненость аквариума {_fishes.Count} из {_fishMax}.");

                Console.SetCursorPosition(0, 0);
                Console.WriteLine("1. Добавить рыбу.\n" +
                    "2. Достать рыбу.\n" +
                    "3. Прожить 1 год.\n" +
                    "4. Выйти из программы.");
                Console.Write("Введите номер команды: ");

                switch (Console.ReadLine())
                {
                    case "1":
                        AddFish();
                        SkipYear();
                        break;
                    case "2":
                        GetOutFish();
                        SkipYear();
                        break;
                    case "3":
                        SkipYear();
                        break;
                    case "4":
                        isContinue = false;
                        break;
                    default:
                        SkipYear();
                        Console.WriteLine("Такой команды нет. Рыбы постарели. Нажмите любую клавишу для продолжения...");
                        Console.ReadKey();
                        break;
                }

                if (_fishes.Count <= 0)
                    isContinue = false;

                Console.Clear();
            }
        }

        private void AddFish()
        {
            if (IsFull==false)
            {
                Console.Write("Введите название рыбы, которую хотите добавить: ");
                string name = Console.ReadLine();
                _fishes.Add(new Fish(name));

                if (_fishes.Count == _fishMax)
                    IsFull = true;
            }
            else
            {
                Console.WriteLine("Аквариум заполнен, рыба не добавлена. Нажмите любую клавишу для продолжения...");
                Console.ReadKey();
            }

            Console.Clear();
        }

        private void GetOutFish()
        {
            Console.Write("Введите название рыбы, которую хотите достать: ");
            string name = Console.ReadLine();

            Fish fish = FindFish(name);

            if (fish == null)
            {
                Console.WriteLine("Такой рыбы нет в аквариуме. Нажмите любую клавишу для продолжения....");
                Console.ReadKey();
            }
            else
            {
                _fishes.Remove(fish);
            }
        }

        private void ShowInfo()
        {
            Console.WriteLine("Информация об аквариуме:");

            for (int i = 0; i < _fishes.Count; i++)
            {
                _fishes[i].ShowInfo();
            }
        }

        private Fish FindFish(string name)
        {
            Fish fish = null;

            for (int i = 0; i < _fishes.Count; i++)
            {
                if (name == _fishes[i].Name)
                    fish = _fishes[i];

            }

            return fish;
        }

        private void SkipYear()
        {
            for (int i = 0; i < _fishes.Count; i++)
            {
                _fishes[i].SkipYear();
            }
        }
    }

    class Fish
    {
        private int _ageOfDeath;
        private Random _random = new Random();

        public int Age { get; private set; }

        public string Name { get; private set; }
        public bool IsAlive { get; private set; }

        public Fish(string name)
        {
            Name = name;
            Age = 0;
            _ageOfDeath = _random.Next(4,8);
            IsAlive = true;
        }

        public void ShowInfo()
        {
            if(IsAlive)
                Console.WriteLine($"{Name}. Возраст: {Age}. Приказано прожить: {_ageOfDeath} лет");
            else
                Console.WriteLine($"{Name}. Уже умерла. Пора бы ее достать.");
        }

        public void SkipYear()
        {
            Age++;

            if (Age > _ageOfDeath)
                IsAlive = false;
        }
    }
}
