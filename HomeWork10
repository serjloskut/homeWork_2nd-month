using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace HomeWork1
{
    class Program
    {
        static void Main(string[] args)
        {
            Warrior[] warriors =
            {
                new FigtherClanHead(100, 30, 40),
                new FigtherClanBoxer(90, 30, 30),
                new FigtherClanShoulder(200, 20, 15),
                new FigtherClanHead(150, 20, 40),
                new FigtherClanBoxer(150, 150, 30)
            };
            Arena arena = new Arena();
            Random random = new Random();

            arena.Work(warriors, random);
        }
    }

    class Arena
    {
        private Warrior fighterOne;
        private Warrior fighterTwo;

        public void Work(Warrior[] warriors, Random random)
        {
            SelectFighters(warriors);
            Fight(random);
            ShowResult();

            Console.ReadKey();
        }

        private int TryParseNumber()
        {
            int resultParse;

            while (!int.TryParse(Console.ReadLine(), out resultParse))
            {
                Console.Write("Неверный выбор! Повпробуйте ввести еще раз: ");
            }

            return resultParse;
        }

        private void SelectFighters(Warrior[] warriors)
        {
            int userSelectOne = 0;
            int userSelectTwo = 0;

            while (userSelectOne == userSelectTwo)
            {
                Console.WriteLine("Доступные бойцы:");
                for (int i = 0; i < warriors.Length; i++)
                {
                    Console.Write($"{i + 1} - ");
                    warriors[i].PrintStats();
                }

                Console.Write("Выберите первого игрока: ");
                userSelectOne = TryParseNumber() - 1;
                Console.Write("Выберите Второго игрока: ");
                userSelectTwo = TryParseNumber() - 1;

                if (userSelectOne == userSelectTwo)
                {
                    Console.WriteLine("Вы выбрали одинаковых бойцов! Нажмите любую клавишу и начните выбор сначала....");
                    Console.ReadKey();
                    Console.Clear();
                }
            }

            fighterOne = warriors[userSelectOne];
            fighterTwo = warriors[userSelectTwo];
        }

        private void Fight(Random random)
        {
            while (fighterOne.Health > 0 && fighterTwo.Health > 0)
            {
                fighterOne.TakeDamage(fighterTwo);
                fighterOne.UseSpecialSkill(random.Next(50, 150));
                fighterTwo.TakeDamage(fighterOne);
                fighterTwo.UseSpecialSkill(random.Next(50, 150));

                fighterOne.PrintStats();
                fighterTwo.PrintStats();
                Console.WriteLine();
            }
        }

        private void ShowResult()
        {
            if (fighterOne.Health <= 0 && fighterTwo.Health <= 0)
                Console.WriteLine("Бой закончился ничьей!");
            else if (fighterOne.Health <= 0)
                Console.WriteLine("Победил второй игрок!");
            else if (fighterTwo.Health <= 0)
                Console.WriteLine("Победил первый игрок!");
        }
    }

    abstract class Warrior
    {
        public int Health { get; private set; }
        public int Armor { get; private set; }
        public int Damage { get; private set; }
        public string TypeClan { get; private set; }

        public Warrior(int health, int armor, int damage)
        {
            Health = health;
            Armor = armor;
            Damage = damage;
        }

        public void TakeDamage(Warrior warrior)
        {
            if (Armor <= warrior.Damage)
                Health -= (warrior.Damage - Armor);
        }

        public void PrintStats()
        {
            Console.WriteLine($"Healh - {Health}; Armor - {Armor}; Damage - {Damage}");
        }

        protected void SetTypeClan(string typeClan)
        {
            TypeClan = typeClan;
        }

        protected void ChangeDamage(int factor)
        {
            Damage += Damage / factor;
        }

        protected void ChangeHealth(int health)
        {
            Health += health;
        }

        protected void ChangeArmor(int armor)
        {
            Armor += armor;
        }

        public abstract void UseSpecialSkill(int random);
    }

    class FigtherClanHead : Warrior
    {
        public FigtherClanHead(int health, int armor, int damage) : base(health, armor, damage)
        {
            SetTypeClan("Боец клана \"Головастых\"");
        }

        public override void UseSpecialSkill(int random)
        {
            ChangeHealth(random / 80);
        }
    }

    class FigtherClanShoulder : Warrior
    {
        public FigtherClanShoulder(int health, int armor, int damage) : base(health, armor, damage)
        {
            SetTypeClan("Боец клана \"Волосатых\"");
        }

        public override void UseSpecialSkill(int random)
        {
            ChangeHealth(random / 7);
            ChangeArmor(-random / 15);
        }
    }

    class FigtherClanBoxer : Warrior
    {
        public FigtherClanBoxer(int health, int armor, int damage) : base(health, armor, damage)
        {
            SetTypeClan("Боец клана \"Боксеры\"");
        }

        public override void UseSpecialSkill(int random)
        {
            ChangeDamage(random / 10);
        }
    }
}
