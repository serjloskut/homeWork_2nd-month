using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace HomeWork1
{
    class Program
    {
        static void Main(string[] args)
        {
            Buyer buyer = new Buyer();
            Seller seller = new Seller();
            Magazine magazine = new Magazine();
            Product[] products = { new Product("Огурец"), new Product("Банан"), new Product("Сыр"), new Product("Чупа-чупс") };

            bool isContinue = true;

            seller.AcceptProduct(products);

            while (isContinue)
            {
                Console.SetCursorPosition(0, 15);
                Console.WriteLine("Товары в наличии:");
                seller.Show();

                Console.SetCursorPosition(0, 0);
                Console.WriteLine("Доступные действие:\n" +
                    "1. Купить товар.\n" +
                    "2. Показать свою корзину.\n" +
                    "3. Выйти из магазина.\n");
                Console.Write("Введите номер действия: ");

                switch (Console.ReadLine())
                {
                    case "1":
                        Console.Write("Введите название продукта: ");
                        string userNameProduct = Console.ReadLine();

                        if (!seller.IsProductInStock(seller.GetProduct(userNameProduct)))
                            break;

                        Console.Write("Введите количество продукта: ");
                        int userCountProduct = Convert.ToInt32(Console.ReadLine());

                        if (!seller.IsQuantityOfProductInStock(seller.GetProduct(userNameProduct), userCountProduct))
                            break;

                        magazine.MakeSale(seller, buyer, userNameProduct, userCountProduct);

                        Console.Write("Покупка успешно завершена. Нажмите любую клавишу для продолжения...");
                        Console.ReadKey();
                        break;
                    case "2":
                        buyer.Show();

                        Console.Write("Нажмите любую клавишу для продолжения: ");
                        Console.ReadKey();
                        break;
                    case "3":
                        isContinue = false;
                        break;
                    default:
                        Console.Write("Команда не распознана. Нажмите любую клавишу для повторного выбора...");
                        Console.ReadKey();
                        break;
                }
                Console.Clear();
            }
        }
    }

    class Product
    {
        public string Name { get; private set; }

        public Product(string name)
        {
            Name = name;
        }
    }

    class Buyer
    {
        protected Dictionary<Product, int> Basket;
        public Buyer()
        {
            Basket = new Dictionary<Product, int>();
        }

        protected void BuyProduct(Product product, int quantity)
        {
            if (Basket.ContainsKey(product))
                Basket[product] += quantity;
            else
                Basket.Add(product, quantity);
        }

        protected void SellProduct(Product product, int quantitySell)
        {
            Basket[product] -= quantitySell;

            if (Basket[product] == 0)
                Basket.Remove(product);
        }

        public void Show()
        {
            foreach (var product in Basket)
            {
                Console.WriteLine($"{product.Key.Name} - {product.Value} шт.");
            }
        }
    }

    class Seller : Buyer
    {
        public Product GetProduct(string nameProduct)
        {
            foreach (var product in Basket)
            {
                if (product.Key.Name == nameProduct)
                {
                    return product.Key;
                }
            }

            return null;
        }

        public bool IsProductInStock(Product product)
        {
            if (!Basket.ContainsKey(product))
            {
                Console.WriteLine("Этого продукта нет в наличии! Нажмите лубую клавишу для продолжения...");
                Console.ReadKey();
            }

            return Basket.ContainsKey(product);
        }

        public bool IsQuantityOfProductInStock(Product product, int quantity)
        {
            if (!(Basket[product] >= quantity))
            {
                Console.WriteLine("Такого количества продукта нет в наличии! Нажмите лубую клавишу для продолжения...");
                Console.ReadKey();
            }

            return Basket[product] >= quantity;
        }

        public void AcceptProduct(Product[] products)
        {
            Random random = new Random();

            for (int i = 0; i < products.Length; i++)
                BuyProduct(products[i], random.Next(10, 30));
        }
    }

    class Magazine : Buyer
    {
        public void MakeSale(Seller seller, Buyer buyer, string userNameProduct, int userCountProduct)
        {
            BuyProduct(seller.GetProduct(userNameProduct), userCountProduct);
            SellProduct(seller.GetProduct(userNameProduct), userCountProduct);
        }
    }
}
