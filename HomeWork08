using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace HomeWork1
{
    class Program
    {
        static void Main(string[] args)
        {
            User user = new User();
            Seller seller = new Seller();
            Product[] productsForAccept = { new Product("Огурец"), new Product("Помидор"), new Product("Огурец"), new Product("Майонез") };

            bool isContinue = true;

            seller.AcceptProduct(productsForAccept);

            while (isContinue)
            {
                Console.SetCursorPosition(0, 15);
                Console.WriteLine("Товары в наличии:");
                seller.PrintProducts();

                Console.SetCursorPosition(0, 0);
                Console.WriteLine("Доступные действие:\n" +
                    "1. Купить товар.\n" +
                    "2. Показать свою корзину.\n" +
                    "3. Выйти из магазина.\n");
                Console.Write("Введите номер действия: ");

                switch (Console.ReadLine())
                {
                    case "1":
                        Console.Write("\nВведите название продукта: ");
                        string userProduct = Console.ReadLine();

                        Product forSale = seller.SellProduct(userProduct);

                        if (forSale == null)
                        {
                            Console.WriteLine("У продавца такой товар отсутствует. Покупка не удалась.\nНажмите любую клавишу для продолжения...");
                            Console.ReadKey();
                        }
                        else
                        {
                            user.BuyProduct(forSale);
                        }
                        break;
                    case "2":
                        Console.WriteLine("\nВ Вашей корзине лежат следующие продукты:");

                        user.PrintProducts();

                        Console.Write("Нажмите любую клавишу для продолжения...");
                        Console.ReadKey();
                        break;
                    case "3":
                        isContinue = false;
                        break;
                    default:
                        Console.Write("Команда не распознана. Нажмите любую клавишу для повторного выбора...");
                        Console.ReadKey();
                        break;
                }
                Console.Clear();
            }
        }
    }

    class People
    {
        protected List<Product> Products;

        public void PrintProducts()
        {
            foreach (var product in Products)
            {
                Console.WriteLine(product.Name);
            }
        }
    }

    class Product
    {
        public string Name { get; private set; }

        public Product(string name)
        {
            Name = name;
        }
    }

    class User : People
    {
        public User()
        {
            Products = new List<Product>();
        }

        public void BuyProduct(Product product)
        {
            Products.Add(product);
            Console.WriteLine("Вы приобрели продукт.\nНажмите любую клавишу для продолжения...");
            Console.ReadKey();
        }
    }

    class Seller : People
    {
        public Seller()
        {
            Products = new List<Product>();
        }

        public void AcceptProduct(Product[] products)
        {
            for (int i = 0; i < products.Length; i++)
                Products.Add(products[i]);
        }

        public bool IsProductInStock(string checkProduct)
        {
            bool isCheck = false;

            foreach (var product in Products)
            {
                if (product.Name == checkProduct)
                    isCheck = true;
            }

            return isCheck;
        }

        public Product SellProduct(string sellProduct)
        {
            Product product = null;
            if (IsProductInStock(sellProduct))
            {
                for (int i = 0; i < Products.Count; i++)
                {
                    if (Products[i].Name == sellProduct)
                    {
                        product = Products[i];
                        Products.RemoveAt(i);
                        break;
                    }
                }
            }
            return product;
        }
    }
}
