using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace HomeWork1
{
    class Program
    {
        static void Main(string[] args)
        {
            Zoo zoo = new Zoo();
            zoo.Work();
        }
    }

    class Zoo
    {
        private List<Aviary> _aviaries;

        public Zoo()
        {
            _aviaries = new List<Aviary>();
            Random random = new Random(); ;
            int aviaryCount = random.Next(4, 30);

            for (int i = 0; i < aviaryCount; i++)
            {
                AddAviary(random);
            }
        }

        public void Work()
        {
            int countWhile = 10;

            for (int i = 0; i < countWhile; i++)
            {
                int number = int.MaxValue;

                while (number > _aviaries.Count - 1)
                {
                    Console.WriteLine($"Вы можете посмотреь {countWhile - i} вольеров. Выберите, к какому вольеру вы хотите подойти.");

                    for (int j = 0; j < _aviaries.Count; j++)
                    {
                        Console.WriteLine("Вольер №" + j);
                    }

                    number = GetNumber();

                    if (number > _aviaries.Count - 1)
                    {
                        Console.WriteLine("Вольер с таким номером не существует..\n");
                    }
                }

                Console.Clear();
                Console.WriteLine($"Вы подошли к вольеру №{number}\n");
                _aviaries[number].ShowInfo();
                Console.WriteLine("Нажмите любую клавишу чтобы вернуться к выбору вольеров...");
                Console.ReadKey();
                Console.Clear();
            }
        }

        private int GetNumber()
        {
            int resultParse = -1;
            bool isContinue = true;

            while (isContinue)
            {
                if (int.TryParse(Console.ReadLine(), out resultParse) == false)
                {
                    Console.Write("Необходимо ввести число! Повпробуйте ввести еще раз: ");
                }
                else
                {
                    if (resultParse < 0)
                        Console.Write("Необходимо ввести число больше нуля! Повпробуйте ввести еще раз: ");
                    else
                        isContinue = false;
                }
            }

            return resultParse;
        }

        private void AddAviary(Random random)
        {
            _aviaries.Add(new Aviary(random));
        }
    }

    class Aviary
    {
        private List<Animal> _animals;
        private string[,] _arrayAnimalsAndSounds;
        private int _maleCount;
        private int _femaleCount;

        public Aviary(Random rand)
        {
            _animals = new List<Animal>();
            _arrayAnimalsAndSounds = new string[,] { { "Кошка", "Мяу" }, { "Собака", "Гав" }, { "Корова", "Му" }, { "Лошадь", "Иго-го" }, { "Петух", "Кукареку" }, { "Свинья", "Хрю" } };
            _maleCount = 0;
            _femaleCount = 0;
            AddAnimals(rand);
        }

        public void ShowInfo()
        {
            Console.WriteLine($"Информация о вольере:\n" +
                $"Животные: {_animals[0].Name}\n" +
                $"Количество: {_animals.Count}\n" +
                $"Пол: ж: {_femaleCount}, м: {_maleCount}\n" +
                $"Издает звук: {_animals[0].Sound}\n");
        }

        private void AddAnimals(Random rand)
        {
            int numberAnimal = rand.Next(0, _arrayAnimalsAndSounds.GetLength(0));
            int countAnimal = rand.Next(70, 100);

            for (int i = 0; i < countAnimal; i++)
            {
                int randomSex = rand.Next((int)Sex.male, (int)Sex.female + 1);

                if (randomSex == (int)Sex.male)
                {
                    _animals.Add(new Animal(_arrayAnimalsAndSounds[numberAnimal, 0], "Мужской", _arrayAnimalsAndSounds[numberAnimal, 1]));
                    _maleCount++;
                }
                else
                {
                    _animals.Add(new Animal(_arrayAnimalsAndSounds[numberAnimal, 0], "Женский", _arrayAnimalsAndSounds[numberAnimal, 1]));
                    _femaleCount++;
                }
            }
        }
    }

    class Animal
    {
        public string Name { get; private set; }
        public string Sex { get; private set; }
        public string Sound { get; private set; }

        public Animal(string name, string sex, string sound)
        {
            Name = name;
            Sound = sound;
            Sex = sex;
        }
    }

    enum Sex
    {
        male,
        female
    }
}
